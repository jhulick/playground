<style>
    /* Styles for anchors without href. Negatively offset because of Jenkins header otherwise obscures clicked target. */
    div.accelerators a:not([href]) {
        display: block;
        position: relative;
        top: -50px;
        visibility: hidden;
    }

    div.accelerators ul li {
        margin-bottom: 15px;
    }
</style>

<div class="accelerators">
    <p>
        The <code>javaBpprPipeline</code> is DevOps Accelerators way of implementing build per pull request
        functionality.<br><br>
        The purpose of this pipeline is both to:
    <ul>
        <li>
            minimize the chance that the code on master branch is faulty / does not build / does not pass tests
        </li>
        <li>
            standardize the way of working (temporary Artifacts will be always stored in repository X, source code will
            always be analyzed and no more issues will be generated (depending on SonarQube profile))
        </li>
    </ul>

    <b>How to work with javaBpprPipeline?</b><br>

    <ol>
        <li>
            Assign a task to a person
        </li>
        <li>
            Create unique branch
        </li>
        <li>
            Implement functionality
        </li>
        <li>
            Commit and push the code to remote repository
        </li>
        <li>
            Create a pull request to the main branch
        </li>
        <li>
            Automatically trigger Build Per Pull Request Pipeline and run additional checks (e.g. code reviewers
            acceptance, check
            if workitem is linked, etc.)
        </li>
        <li>
            Merge the code to the main branch
        </li>
    </ol>

    <b>Fully configured javaBpprPipeline consists of:</b>
    <ul>
        <li>
            Cleaning the workspace
        </li>
        <li>
            Executing the build task/goal
        </li>
        <li>
            Running tests
        </li>
        <li>
            Performing SonarQube analysis
        </li>
        <li>
            Publishing created artifacts to Artifactory (in case of docker images Openshift Atomic Registry is also
            possible)
        </li>
        <li>
            Creating/locking BPPR project
        </li>
        <li>
            Deploying application to one of deployment providers (Openshift, Kubernetes, more may be implemented in
            the future), performing readiness checks and running integration tests.
        </li>
        <li>
            Confirmation of Manual tests
        </li>
        <li>
            Deleting/unlocking bppr project and cleaning up workspace
        </li>
    </ul>

    If you are interested also how to configure Gradle and Maven files for <b>javaBpprPipeline</b> and to see some
    examples of Jenkinsfiles that can be used, please also
    check out dedicated <a
        href="https://source.netcompany.com/tfs/Netcompany/NCCGV001/_wiki/wikis/NCCGV001.wiki?wikiVersion=GBwikiMaster&pagePath=%2FEnd%252Duser%20Documentation%2FDevOps%20for%20Java%2FJavaBpprPipeline%20in%20your%20project&pageId=546">wikipage</a>.<br>
    <p>
        <b>How to configure javaBpprPipeline?</b><br>
    </p>
    <p>
        Starting off, there are 2 types of objects that configure pipelines: parameters and arguments.<br>
        Parameters are expected to be passed by Source Control Management Tool (e.g. from pipeline in AzureDevOps).<br>
        They are usually accessible through environment variable of the provisioner.<br>
        Arguments are set in Jenkinsfiles and allow to customize pipeline behaviour.<br><br>
        First, we will describe parameters:
    <ul>
        <li>
            COMMIT_ID - deprecated, Git commit ID of the branch, previously used in redundant pre-merge step
        </li>
        <li>
            SOURCE_BRANCH - name of the source branch, used to extract Pull Request number
        </li>
        <li>
            PR_SOURCE_BRANCH - pull request source branch name, used in SonarQube analysis - name of analysed branch
        </li>
        <li>
            PR_TARGET_BRANCH - pull request target branch name, used in SonarQube analysis (if not provided - "master")
            - name of main branch
        </li>
    </ul>

    <p>
        <b>Pipeline arguments</b><br><br>
        Currently only one argument is supported. However it is a closure, which values are evaluated upon creation of
        the pipeline.<br>
        <i><b>Note:</b> Closure arguments will have convention "&lt;variable_name&gt; : &lt;variable_type&gt;",
            to
            get more information about given variable, just click it :)</i>
    </p>
    <dl>
        <dt><b>javaBpprPipeline</b> {</dt>
        <dd><a href="#javaBppr_jdk"><code>jdk</code></a> : String</dd>
        <dd><a href="#javaBppr_buildToolType"><code>buildToolType</code></a> : BuildToolType, <b>mandatory
            parameter</b></dd>
        <dd><a href="#javaBppr_buildToolName"><code>buildToolName</code></a> : String</dd>
        <dd><a href="#javaBppr_buildToolLoggingLevel"><code>buildToolLoggingLevel</code></a> : String</dd>
        <dd><a href="#javaBppr_sonarProfile"><code>sonarProfile</code></a> : String</dd>
        <dd><a href="#javaBppr_buildToolCustomClass"><code>buildToolCustomClass</code></a> : String</dd>
        <dd><a href="#javaBppr_useWrapper"><code>useWrapper</code></a> : boolean</dd>
        <dd><a href="#javaBppr_agentLabel"><code>agentLabel</code></a> : String</dd>
        <dd><a href="#javaBppr_sonarqubeServerKey"><code>sonarqubeServerKey</code></a> : String</dd>
        <dd><a href="#javaBppr_sonarqubeDisableWebhook"><code>sonarqubeDisableWebhook</code></a> : boolean</dd>
        <dd><a href="#javaBppr_mailRecipients"><code>mailRecipients</code></a> : List
            &lt;String&gt;
        </dd>
        <dd><a href="#javaBppr_cleaningStrategy"><code>cleaningStrategy</code></a> : Map</dd>
        <dd><a href="#javaBppr_continuousDelivery"><code>continuousDelivery</code></a> : Map</dd>
        <dd><a href="#javaBppr_integrationTestParams"><code>integrationTestParams</code></a> : Map</dd>
        <dd><a href="#javaBppr_dockerImagesRepository"><code>dockerImagesRepository</code></a> : Map</dd>
        <dd><a href="#javaBppr_integrationTests"><code>integrationTests</code></a> : Map</dd>
    </dl>
    }
    <br>
    <dl>
        <dt><code id="javaBppr_jdk">jdk</code></dt>
        <dd>
            The same as <a href="#javaBuild_jdk"><code>jdk</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_buildToolType">buildToolType</code></dt>
        <dd>
            The same as <a href="#javaBuild_buildToolType"><code>buildToolType</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_buildToolName">buildToolName</code></dt>
        <dd>
            The same as <a href="#javaBuild_buildToolName"><code>buildToolName</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_buildToolLoggingLevel">buildToolLoggingLevel</code></dt>
        <dd>
            The same as <a href="#javaBuild_buildToolLoggingLevel"><code>buildToolLoggingLevel</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_sonarProfile">sonarProfile</code></dt>
        <dd>
            The same as <a href="#javaBuild_sonarProfile"><code>sonarProfile</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_buildToolCustomClass">buildToolCustomClass</code></dt>
        <dd>
            The same as <a href="#javaBuild_buildToolCustomClass"><code>buildToolCustomClass</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_useWrapper">useWrapper</code></dt>
        <dd>
            The same as <a href="#javaBuild_useWrapper"><code>useWrapper</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_agentLabel">agentLabel</code></dt>
        <dd>
            The same as <a href="#javaBuild_agentLabel"><code>agentLabel</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_sonarqubeServerKey">sonarqubeServerKey</code></dt>
        <dd>
            The same as <a href="#javaBuild_sonarqubeServerKey"><code>sonarqubeServerKey</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_sonarqubeDisableWebhook">sonarqubeDisableWebhook</code></dt>
        <dd>
            The same as <a href="#javaBuild_sonarqubeDisableWebhook"><code>sonarqubeDisableWebhook</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_mailRecipients">mailRecipients</code></dt>
        <dd>
            The same as <a href="#javaBuild_mailRecipients"><code>mailRecipients</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_cleaningStrategy">cleaningStrategy</code></dt>
        <dd>
            The same as <a href="#javaBuild_cleaningStrategy"><code>cleaningStrategy</code></a> in
            <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_integrationTestParams">integrationTestParams</code> DEPRECATED - use <code>integrationTests</code>
            instead
        </dt>
        <dd>
            The same as <a href="#javaBuild_integrationTestParams"><code>integrationTestParams</code></a> in <b>javaBuildPipeline</b>
        </dd>
        <dt><code id="javaBppr_continuousDelivery">continuousDelivery</code></dt>
        <dd>
            <p>
                A map, which configures continuous delivery process. In DevOps Accelerators way the stages that
                are being run as the part of this process are: "Create BPPR Project", "Publish BPPR images",
                "Deploy BPPR Application", "Verify Readiness of Application", "Run Integration Test", "Manual
                test confirmation" and "Delete BPPR environment"
            </p>
            <ul>
                <li>
                    <b>projectNameSuffix</b> : String - by default "bppr", if project/namespace name generation
                    is being used, then this suffix will be appended in projectName/namespace
                </li>
                <li>
                    <b>projectName</b> : String - by default job name will be taken and prefix <i>bppr_</i> will
                    be added. This name will be used by deployment provider - it will try to deploy application
                    to the namespace/environment with that name and create deployment provider specific
                    resources with that name.
                </li>
                <li>
                    <b>projectNameDelimeter</b> : String - by default "-", if project/namespace name generation
                    is being used, then this delimeter will be used as a separator
                </li>
                <li>
                    <b>templatePath</b> : String - relative path to your yaml/chart file with deployment
                    specification.
                </li>
                <li>
                    <b>defaultTimeout</b> : int - by default 5 minutes. Specifies how long
                    Openshift/Kubernetes/Deployment Provider should wait in "Verify Readiness" stage, until job
                    will be marked as failed.
                </li>
                <li>
                    <b>integrationTestWithKubernetes</b> : boolean DEPRECATED - use <code>integrationTests</code>
                    instead.
                    By default <code>false</code>. If set to
                    <code>true</code> and <code>integrationTestParams</code> variable is defined, stage "Internal Api
                    Integration Tests"
                    will be run and new Kubernetes agent will be deployed to the given namespace/project.<br>
                    This agent will have access to the deployments, services, resources in general in this
                    project/namespace. This simplifies running integration test.
                </li>
                <li>
                    <b>agentInheritFrom</b> : String DEPRECATED - use <code>integrationTests</code>
                    instead. By default set to <code>"Kubernetes"</code>. If <code>integrationTestParams</code> variable
                    is defined,
                    specifies which pod
                    template should be used as a base for Jenkins agent that will be deployed in stage
                    "Internal Api Integration Tests".<br>
                    Those agents should be defined in Jenkins Configuration As Code and can be found in section
                    "Manage Jenkins->Configure system->Cloud"
                </li>
                <li>
                    <b>agentServiceAccount</b> : String DEPRECATED - use <code>integrationTests</code>
                    instead. By default set to <code>"builder"</code>. If <code>integrationTestParams</code> variable is
                    defined,
                    specifies which
                    service account should be used when deploying Jenkins agent that will be deployed in stage
                    "Internal Api Integration Tests".<br>
                    Note: this is the service account of the project/namespace where BPPR is being performed.
                    Not where Jenkins master is being hosted.
                </li>
                <li>
                    <b>deploymentParameters</b> : List
                    &lt;String&gt; - by default []. It may be used to provide additional parameters for Openshift's
                    template or Kubernetes Helm Chart.
                </li>
                <li>
                    <b>credentialParameters</b> : List&lt;? extends AbstractCredentials&gt; - List of credential
                    parameters that may be passed to pipeline.<br>
                    Types of credential parameters are:
                    <ul>
                        <li>
                            this.credential.usernamePassword("credId", "USER_PARAM", "PASSWORD_PARAM"): for
                            username password type of credential. USER_PARAM will be replace by username and
                            PASSWORD_PARAM will be replaced by password of credential with id "credentialId"
                        </li>
                        <li>
                            this.credentials.string("credId", "STRING_PARAM"): string type of credential.
                            STRING_PARAM will be replace by string of credential with id "credentialId"
                        </li>
                        <li>
                            this.credentials.file("credId", "FILE_PATH"): path to a file of file-type
                            credential. FILE_PATH will be replace by path to secret file of credential with id
                            "credentialId"
                        </li>
                    </ul>
                </li>
                <li>
                    <b>requiredComponents</b> : List
                    &lt;Map&gt; - by default []. To test some of your project components you might need run them along
                    other components (for example you might want to have database running in order to test
                    you application).<br>
                    This parameter is designated to point to the YAML file which contains list of required
                    component with their basic configuration.
                </li>
                <li>
                    <b>kubernetesCluster</b> : Map - defines configuration for <i>kubernetes-cli-plugin</i>,
                    which are being used to access Kubernetes cluster. It's variables and default values are:
                    <ul>
                        <li>
                            <b>credentialsId</b> : String - ID of Jenkins credentials, that will be used to
                            access cluster. By default, it is a value of system environment variable
                            "KUBERNETES_SA_TOKEN". If this is not present, then value "aks-token" is being used.
                        </li>
                        <li>
                            <b>serverUrl</b> : String - String matching url of Kubernetes cluster. By default,
                            it is a value of system environment variable "KUBERNETES_CLUSTER_URL". If this is
                            not present, then value
                            "https://accelerators-aks-dns-8c106221.hcp.uksouth.azmk8s.io:443" is being used.
                        </li>
                        <li>
                            <b>namespace</b> : String - Name of namespace, where the service account token was
                            created. By default, it is a value of system environment variable
                            "KUBERNETES_SA_NAMESPACE". If this is not present, then value "dev" is being used.
                        </li>
                        <li>
                            <b>caCertificate</b> : String - Cluster Certificate Authority used to validate the
                            API server's certificate. By default, it is a value of system environment variable
                            "KUBERNETES_CA_CERT".
                        </li>
                        <li>
                            <b>clusterName</b> : String - Name of the generated Cluster configuration. By
                            default, it is a value of system environment variable "KUBERNETES_CLUSTER_NAME". If
                            this is not present, then value "k8s" is being used.
                        </li>
                        <li>
                            <b>serverUrl</b> : String - Name of the generated Context configuration. By default,
                            it is a value of system environment variable "KUBERNETES_CONTEXT_NAME". If this is
                            not present, then value "k8s" is being used.
                        </li>
                    </ul>
                    For more information about kubernetes-cli-plugin, reach out to their guthub <a
                        href="https://github.com/jenkinsci/kubernetes-cli-plugin">page</a>
                </li>
                <li>
                    <b>deliveryCluster</b> : String - It is possible to run continuous delivery stages on
                    different cluster. In order to achieve this, you need to either:
                    <ul>
                        <li>
                            Specify parameter DELIVERY_CLUSTER
                        </li>
                        <li>
                            Set appropriate deliveryCluster in your pipelineConfig
                        </li>
                        <li>
                            Set system environment variable DEFAULT_CLUSTER
                        </li>
                    </ul>
                    Note: if you are deploying to OpenShift cluster, you must also add this cluster in Jenkins
                    configuration
                </li>
                <li>
                    <b>deploymentProviderType</b> : String - By default, set to <i>OPENSHIFT</i>. This value
                    instruct Jenkins what deployment platform should be used in continuous delivery stages
                    (except creation and deletion - this is handled by projectManagementProvider).<br>
                    Currently two options for bppr pipeline are implemented:
                    <ul>
                        <li>
                            <b>OPENSHIFT</b> - Openshift is being used as a platform which manages application
                            deployment and its lifecycle.<br>
                        </li>
                        <li>
                            <b>KUBERNETES_WITH_HELM</b> - Kubernetes is being used as a platform and Helm 3.0 is
                            being used as a tool, which manage application deployment and its lifecycle.<br>
                        </li>
                    </ul>
                </li>
                <li>
                    <b>projectManagementProvider</b> : String - By default, set to <i>OPENSHIFT_BPPR_WITHOUT_JENKINS_LOCK</i>.
                    This value instruct Jenkins how to treat projects/namespaces.<br>
                    Currently two options for bppr pipeline are implemented:
                    <ul>
                        <li>
                            <b>OPENSHIFT_BPPR_WITHOUT_JENKINS_LOCK</b> - Openshift is being used as a platform
                            which decides about project management.<br>
                            In this case <i>continuousDelivery.projectName</i> will be the name of project (if
                            not provided, will be automatically generated), where the application will be
                            deployed.<br>
                            There are no locks acquired on that resource, so multiple jobs can deploy to it
                            simultaneously.<br>
                            Project will be deleted.
                        </li>
                        <li>
                            <b>OPENSHIFT_BPPR_WITH_JENKINS_LOCK</b> - Openshift is being used as a platform
                            which decides about project management.<br>
                            In this case <i>projectName</i> will be acquired from Lockable Resources Plugin and
                            returned value will be used as a name for project, where the application will be
                            deployed.<br>
                            The lock is acquired on that resource, no concurrency is allowed.<br>
                            Project will not be deleted.
                        </li>
                        <li>
                            <b>KUBERNETES_BPPR_WITHOUT_JENKINS_LOCK</b> - Kubernetes is being used as a
                            platform which decides about namespace management.<br>
                            In this case <i>continuousDelivery.projectName</i> will be the name of namespace (if
                            not provided, will be automatically generated), where the application will be
                            deployed.<br>
                            There are no locks acquired on that resource, so multiple jobs can deploy to it
                            simultaneously.<br>
                            Namespace will be deleted.
                        </li>
                        <li>
                            <b>KUBERNETES_BPPR_WITH_JENKINS_LOCK</b> - Kubernetes is being used as a platform
                            which decides about namespace management.<br>
                            In this case <i>projectName</i> will be acquired from Lockable Resources Plugin and
                            returned value will be used as a name for namespace, where the application will be
                            deployed.<br>
                            The lock is acquired on that resource, no concurrency is allowed.<br>
                            Namespace will not be deleted.
                        </li>
                    </ul>
                </li>
                <li>
                    <b>templateProcessingTool</b> : String - By default, set to <i>OC</i>. This value instruct
                    Jenkins what tool/plugin should be used to process provided templates/helm charts.<br>
                    Currently two options for bppr pipeline are implemented:
                    <ul>
                        <li>
                            <b>OC</b> - Openshift Client is being used as a tool which processes templates.<br>
                        </li>
                        <li>
                            <b>HELM</b> - Helm 3.0 is being used as a tool which processes helm charts.<br>
                        </li>
                    </ul>
                    Note: deploymentProviderType, projectManagementProvider and templateProcessingTool are strongly
                    correlated. Currently implemented options are:
                    <p>
                    <ul>
                        <li>
                            <code>templateProcessingToolType.OC, deploymentProvider.OPENSHIFT,
                                projectManagementProvider.OPENSHIFT_BPPR_WITH_JENKINS_LOCK</code>
                        </li>
                        <li>
                            <code>templateProcessingToolType.OC, deploymentProvider.OPENSHIFT,
                                projectManagementProvider.OPENSHIFT_BPPR_WITHOUT_JENKINS_LOCK</code>
                        </li>
                        <li>
                            <code>templateProcessingToolType.OC, deploymentProvider.OPENSHIFT,
                                projectManagementProvider.OPENSHIFT_BUILD_WITHOUT_JENKINS_LOCK</code>
                        </li>
                        <li>
                            <code>templateProcessingToolType.HELM, deploymentProvider.KUBERNETES,
                                projectManagementProvider.KUBERNETES_BPPR_WITH_JENKINS_LOCK</code>
                        </li>
                        <li>
                            <code>templateProcessingToolType.HELM, deploymentProvider.KUBERNETES,
                                projectManagementProvider.KUBERNETES_BPPR_WITHOUT_JENKINS_LOCK</code>
                        </li>
                        <li>
                            <code>templateProcessingToolType.HELM, deploymentProvider.KUBERNETES,
                                projectManagementProvider.KUBERNETES_BUILD_WITHOUT_JENKINS_LOCK</code>
                        </li>
                    </ul>
                    </p>
                </li>
            </ul>
        </dd>
        <dt><code id="javaBppr_dockerImagesRepository">dockerImagesRepository</code></dt>
        <dd>
            <p>
                A map, which allows to configure where bppr docker images should be published.<br>
                If no value is provided, then the images will be published to centralized Artifactory and
                deleted at the end of the pipeline.<br>
                Parameters that are being used in this process are:
            </p>
            <ul>
                <li>
                    <b>type</b> : ImageRepoType – Enum, which specifies what is the type of docker repository.
                    Currently available values are:
                    <ul>
                        <li>
                            <b>ARTIFACTORY</b> - For publishing to Artifactory repository type
                        </li>
                        <li>
                            <b>OPENSHIFT</b> - For publishing to Openshift's Atomic Registry, note - images are
                            not being deleted from this docker repository type. However, they will be deleted if
                            the project is deleted.
                        </li>
                    </ul>
                </li>
                <li>
                    <b>pushCredentialsId</b> : String - ID of credentials that will be used for pushing Docker
                    images to Docker Repository.<br>
                    By default, the first value from Jenkins -> Manage Jenkins -> Configure System ->
                    Artifactory servers will be taken.
                </li>
                <li>
                    <b>deleteCredentialsId</b> : String - ID of credentials that will be used for deleting
                    Docker images to Docker Repository.<br>
                    By default, the first value from Jenkins -> Manage Jenkins -> Configure System ->
                    Artifactory servers will be taken.
                </li>
                <li>
                    <b>stagingRepositoryUrl</b> : String – Endpoint to where Docker images should be stored.<br>
                    By default its value is taken from system environment variable "IMAGE_REPOSITORY_URL", if
                    this variable is absent, then "https://artifactory.nchosting.dk/nc-dvo-docker-staging-local"
                    is being used.
                </li>
            </ul>
        </dd>
        <dt><code id="javaBppr_integrationTests">integrationTests</code></dt>
        <dd>
            <p>
                Note: if <code>integrationTests</code> variable is not defined, old
                configuration approach will be used. If present, <code>integrationTestParams</code>, <code>skipIntegrationTest</code>,
                 <code>integrationTestWithKubernetes</code>, <code>agentInheritFrom</code>, <code>agentServiceAccount</code> will be ignored.
            </p>
            <p>
                Optional configuration map for integration tests. Map can contain parameters described below.
                If provided Map is empty, no test will be run.
            </p>
            <ul>
                <li>
                    <b>publicApi</b> : Map - Optional entry, if defined public Api integration tests stage will be run.
                    Tests are run on continuous delivery agent. Available parameters
                    <ul>
                        <li>
                            <b>skip</b> : boolean - optional parameter, default set to <code>false</code>. If set to
                            <code>true</code> - tests will be skipped
                        </li>
                        <li>
                            <b>parameters</b> : List&lt;Map&gt; - optional list of parameters. Each parameter is
                            represented as a Map with following keys
                            <ul>
                                <li>
                                    <b>propertyType</b> : String - 'P' for project property or 'D' for system property
                                </li>
                                <li>
                                    <b>propertyName</b> : String - name of the property
                                </li>
                                <li>
                                    <b>propertyValue</b> : String - value of the property
                                </li>
                                <li>
                                    <b>appHostForValue</b> : boolean - optional, set to true if the property is an
                                    appUrl
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li>
                    <b>internalApi</b> : Map - Optional entry, if defined internal Api integration tests stage will be
                    run. Tests are run in agent inside project namespace. Available parameters
                    <ul>
                        <li>
                            <b>skip</b> : boolean - optional parameter, default set to <code>false</code>. If set to
                            <code>true</code> - tests will be skipped
                        </li>
                        <li>
                            <b>agentInheritFrom</b> : String -
                            by default set to <code>"Kubernetes"</code>.
                            Specifies which pod template should be used as a base for Jenkins agent that will be
                            deployed in stage
                            "Internal Api Integration Tests".<br>
                            Those agents should be defined in Jenkins Configuration As Code and can be found in section
                            "Manage Jenkins->Configure system->Cloud"
                        </li>
                        <li>
                            <b>agentServiceAccount</b> : String -
                            by default set to <code>"builder"</code>.
                            specifies which service account should be used when deploying Jenkins agent that will be
                            deployed in stage
                            "Internal Api Integration Tests".<br>
                            Note: this is the service account of the project/namespace where BPPR is being performed.
                            Not where Jenkins master is being hosted.
                        </li>
                        <li>
                            <b>parameters</b> : List&lt;Map&gt; - optional list of parameters. Each parameter is
                            represented as a Map with following keys
                            <ul>
                                <li>
                                    <b>propertyType</b> : String - 'P' for project property or 'D' for system property
                                </li>
                                <li>
                                    <b>propertyName</b> : String - name of the property
                                </li>
                                <li>
                                    <b>propertyValue</b> : String - value of the property
                                </li>
                                <li>
                                    <b>appHostForValue</b> : boolean - optional, set to true if the property is an
                                    appUrl
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li>
                    <b>component</b> : Map - Optional entry, if defined component tests stage will be run. Tests are run
                    on user defined agent. Available parameters
                    <ul>
                        <li>
                            <b>agentLabel</b> : String - optional parameter, Defines agent on which stage is executed.
                            Default value is same as <a href="#javaBppr_agentLabel"><code>agentLabel</code></a>.
                        </li>
                        <li>
                            <b>skip</b> : boolean - optional parameter, default set to <code>false</code>. If set to
                            <code>true</code> - tests will be skipped
                        </li>
                        <li>
                            <b>parameters</b> : List&lt;Map&gt; - optional list of parameters. Each parameter is
                            represented as a Map with following keys
                            <ul>
                                <li>
                                    <b>propertyType</b> : String - 'P' for project property or 'D' for system property
                                </li>
                                <li>
                                    <b>propertyName</b> : String - name of the property
                                </li>
                                <li>
                                    <b>propertyValue</b> : String - value of the property
                                </li>
                                <li>
                                    <b>appHostForValue</b> : boolean - optional, set to true if the property is an
                                    appUrl
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
            </ul>
        </dd>
    </dl>
</div>
